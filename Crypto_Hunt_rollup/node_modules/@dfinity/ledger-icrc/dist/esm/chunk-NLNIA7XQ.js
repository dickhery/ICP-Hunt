import{Canister as be,createServices as Fe,toNullable as ke}from"@dfinity/utils";var ge=({IDL:e})=>{let r=e.Rec(),c=e.Rec(),o=e.Rec(),l=e.Record({num_blocks_to_archive:e.Opt(e.Nat64),max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Opt(e.Nat64),more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Opt(e.Principal)}),p=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),d=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(d)}),V=e.Variant({SetTo:t,Unset:e.Null}),N=e.Record({icrc2:e.Bool}),y=e.Record({change_archive_options:e.Opt(l),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(e.Nat),metadata:e.Opt(e.Vec(e.Tuple(e.Text,p))),change_fee_collector:e.Opt(V),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Opt(e.Text),feature_flags:e.Opt(N)}),h=e.Record({decimals:e.Opt(e.Nat8),token_symbol:e.Text,transfer_fee:e.Nat,metadata:e.Vec(e.Tuple(e.Text,p)),minting_account:t,initial_balances:e.Vec(e.Tuple(t,e.Nat)),fee_collector_account:e.Opt(t),archive_options:e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Text,feature_flags:e.Opt(N)}),ye=e.Variant({Upgrade:e.Opt(y),Init:h}),s=e.Nat,b=e.Record({block_range_end:s,canister_id:e.Principal,block_range_start:s}),_=e.Record({start:s,length:e.Nat}),F=e.Vec(e.Tuple(e.Text,o));o.fill(e.Variant({Int:e.Int,Map:F,Nat:e.Nat,Nat64:e.Nat64,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(o)}));let O=o,k=e.Record({blocks:e.Vec(O)}),A=e.Func([_],[k],[]),v=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),first_index:s,blocks:e.Vec(O),chain_length:e.Nat64,archived_blocks:e.Vec(e.Record({callback:A,start:s,length:e.Nat}))}),P=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),hash_tree:e.Vec(e.Nat8)}),m=e.Nat,x=e.Record({start:m,length:e.Nat}),a=e.Nat64,w=e.Record({from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),B=e.Record({to:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat}),C=e.Record({fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),G=e.Record({to:t,fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),R=e.Record({burn:e.Opt(w),kind:e.Text,mint:e.Opt(B),approve:e.Opt(C),timestamp:a,transfer:e.Opt(G)}),E=e.Record({transactions:e.Vec(R)}),M=e.Func([x],[E],[]),q=e.Record({first_index:m,log_length:e.Nat,transactions:e.Vec(R),archived_transactions:e.Vec(e.Record({callback:M,start:m,length:e.Nat}))}),U=e.Record({take:e.Opt(e.Nat),prev_spender:e.Opt(t),from_account:e.Opt(t)}),S=e.Record({from_account:t,to_spender:t,allowance:e.Nat,expires_at:e.Opt(e.Nat64)}),z=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),AccessDenied:e.Record({reason:e.Text})}),Q=e.Variant({Ok:e.Vec(S),Err:z}),J=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),IndexPrincipalNotSet:e.Null}),$=e.Variant({Ok:e.Principal,Err:J}),n=e.Nat,j=e.Record({url:e.Text,name:e.Text}),H=e.Record({to:t,fee:e.Opt(n),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(d),created_at_time:e.Opt(a),amount:n}),K=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:n}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:n}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:n})}),W=e.Variant({Ok:s,Err:K}),T=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),X=e.Record({metadata:T,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),Y=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:X}),Z=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),I=e.Record({metadata:T,consent_message:Z}),u=e.Record({description:e.Text}),D=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:u,UnsupportedCanisterCall:u,ConsentMessageUnavailable:u}),L=e.Variant({Ok:I,Err:D}),ee=e.Record({account:t,spender:t}),te=e.Record({allowance:e.Nat,expires_at:e.Opt(a)}),re=e.Record({fee:e.Opt(e.Nat),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),ce=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:e.Nat}),AllowanceChanged:e.Record({current_allowance:e.Nat}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,Expired:e.Record({ledger_time:a}),InsufficientFunds:e.Record({balance:e.Nat})}),ae=e.Variant({Ok:s,Err:ce}),ne=e.Record({to:t,fee:e.Opt(n),spender_subaccount:e.Opt(d),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:n}),oe=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:n}),BadBurn:e.Record({min_burn_amount:n}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:n}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:n})}),se=e.Variant({Ok:s,Err:oe}),ie=e.Record({from:e.Opt(e.Principal)}),le=e.Vec(e.Record({end:e.Nat,canister_id:e.Principal,start:e.Nat}));c.fill(e.Variant({Int:e.Int,Map:e.Vec(e.Tuple(e.Text,c)),Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(c)})),r.fill(e.Record({log_length:e.Nat,blocks:e.Vec(e.Record({id:e.Nat,block:c})),archived_blocks:e.Vec(e.Record({args:e.Vec(_),callback:e.Func([e.Vec(_)],[r],[])}))}));let _e=e.Record({certificate:e.Vec(e.Nat8),hash_tree:e.Vec(e.Nat8)});return e.Service({archives:e.Func([],[e.Vec(b)],[]),get_blocks:e.Func([_],[v],[]),get_data_certificate:e.Func([],[P],[]),get_transactions:e.Func([x],[q],[]),icrc103_get_allowances:e.Func([U],[Q],[]),icrc106_get_index_principal:e.Func([],[$],[]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],[]),icrc1_balance_of:e.Func([t],[n],[]),icrc1_decimals:e.Func([],[e.Nat8],[]),icrc1_fee:e.Func([],[n],[]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,p))],[]),icrc1_minting_account:e.Func([],[e.Opt(t)],[]),icrc1_name:e.Func([],[e.Text],[]),icrc1_supported_standards:e.Func([],[e.Vec(j)],[]),icrc1_symbol:e.Func([],[e.Text],[]),icrc1_total_supply:e.Func([],[n],[]),icrc1_transfer:e.Func([H],[W],[]),icrc21_canister_call_consent_message:e.Func([Y],[L],[]),icrc2_allowance:e.Func([ee],[te],[]),icrc2_approve:e.Func([re],[ae],[]),icrc2_transfer_from:e.Func([ne],[se],[]),icrc3_get_archives:e.Func([ie],[le],[]),icrc3_get_blocks:e.Func([e.Vec(_)],[r],[]),icrc3_get_tip_certificate:e.Func([],[e.Opt(_e)],[]),icrc3_supported_block_types:e.Func([],[e.Vec(e.Record({url:e.Text,block_type:e.Text}))],[]),is_ledger_ready:e.Func([],[e.Bool],[])})};var fe=({IDL:e})=>{let r=e.Rec(),c=e.Rec(),o=e.Rec(),l=e.Record({num_blocks_to_archive:e.Opt(e.Nat64),max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Opt(e.Nat64),more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Opt(e.Principal)}),p=e.Variant({Int:e.Int,Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text}),d=e.Vec(e.Nat8),t=e.Record({owner:e.Principal,subaccount:e.Opt(d)}),V=e.Variant({SetTo:t,Unset:e.Null}),N=e.Record({icrc2:e.Bool}),y=e.Record({change_archive_options:e.Opt(l),token_symbol:e.Opt(e.Text),transfer_fee:e.Opt(e.Nat),metadata:e.Opt(e.Vec(e.Tuple(e.Text,p))),change_fee_collector:e.Opt(V),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Opt(e.Text),feature_flags:e.Opt(N)}),h=e.Record({decimals:e.Opt(e.Nat8),token_symbol:e.Text,transfer_fee:e.Nat,metadata:e.Vec(e.Tuple(e.Text,p)),minting_account:t,initial_balances:e.Vec(e.Tuple(t,e.Nat)),fee_collector_account:e.Opt(t),archive_options:e.Record({num_blocks_to_archive:e.Nat64,max_transactions_per_response:e.Opt(e.Nat64),trigger_threshold:e.Nat64,more_controller_ids:e.Opt(e.Vec(e.Principal)),max_message_size_bytes:e.Opt(e.Nat64),cycles_for_archive_creation:e.Opt(e.Nat64),node_max_memory_size_bytes:e.Opt(e.Nat64),controller_id:e.Principal}),max_memo_length:e.Opt(e.Nat16),index_principal:e.Opt(e.Principal),token_name:e.Text,feature_flags:e.Opt(N)}),ye=e.Variant({Upgrade:e.Opt(y),Init:h}),s=e.Nat,b=e.Record({block_range_end:s,canister_id:e.Principal,block_range_start:s}),_=e.Record({start:s,length:e.Nat}),F=e.Vec(e.Tuple(e.Text,o));o.fill(e.Variant({Int:e.Int,Map:F,Nat:e.Nat,Nat64:e.Nat64,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(o)}));let O=o,k=e.Record({blocks:e.Vec(O)}),A=e.Func([_],[k],["query"]),v=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),first_index:s,blocks:e.Vec(O),chain_length:e.Nat64,archived_blocks:e.Vec(e.Record({callback:A,start:s,length:e.Nat}))}),P=e.Record({certificate:e.Opt(e.Vec(e.Nat8)),hash_tree:e.Vec(e.Nat8)}),m=e.Nat,x=e.Record({start:m,length:e.Nat}),a=e.Nat64,w=e.Record({from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),B=e.Record({to:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat}),C=e.Record({fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),G=e.Record({to:t,fee:e.Opt(e.Nat),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,spender:e.Opt(t)}),R=e.Record({burn:e.Opt(w),kind:e.Text,mint:e.Opt(B),approve:e.Opt(C),timestamp:a,transfer:e.Opt(G)}),E=e.Record({transactions:e.Vec(R)}),M=e.Func([x],[E],["query"]),q=e.Record({first_index:m,log_length:e.Nat,transactions:e.Vec(R),archived_transactions:e.Vec(e.Record({callback:M,start:m,length:e.Nat}))}),U=e.Record({take:e.Opt(e.Nat),prev_spender:e.Opt(t),from_account:e.Opt(t)}),S=e.Record({from_account:t,to_spender:t,allowance:e.Nat,expires_at:e.Opt(e.Nat64)}),z=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),AccessDenied:e.Record({reason:e.Text})}),Q=e.Variant({Ok:e.Vec(S),Err:z}),J=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),IndexPrincipalNotSet:e.Null}),$=e.Variant({Ok:e.Principal,Err:J}),n=e.Nat,j=e.Record({url:e.Text,name:e.Text}),H=e.Record({to:t,fee:e.Opt(n),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(d),created_at_time:e.Opt(a),amount:n}),K=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,BadBurn:e.Record({min_burn_amount:n}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:n}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:n})}),W=e.Variant({Ok:s,Err:K}),T=e.Record({utc_offset_minutes:e.Opt(e.Int16),language:e.Text}),X=e.Record({metadata:T,device_spec:e.Opt(e.Variant({GenericDisplay:e.Null,LineDisplay:e.Record({characters_per_line:e.Nat16,lines_per_page:e.Nat16})}))}),Y=e.Record({arg:e.Vec(e.Nat8),method:e.Text,user_preferences:X}),Z=e.Variant({LineDisplayMessage:e.Record({pages:e.Vec(e.Record({lines:e.Vec(e.Text)}))}),GenericDisplayMessage:e.Text}),I=e.Record({metadata:T,consent_message:Z}),u=e.Record({description:e.Text}),D=e.Variant({GenericError:e.Record({description:e.Text,error_code:e.Nat}),InsufficientPayment:u,UnsupportedCanisterCall:u,ConsentMessageUnavailable:u}),L=e.Variant({Ok:I,Err:D}),ee=e.Record({account:t,spender:t}),te=e.Record({allowance:e.Nat,expires_at:e.Opt(a)}),re=e.Record({fee:e.Opt(e.Nat),memo:e.Opt(e.Vec(e.Nat8)),from_subaccount:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:e.Nat,expected_allowance:e.Opt(e.Nat),expires_at:e.Opt(a),spender:t}),ce=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:e.Nat}),AllowanceChanged:e.Record({current_allowance:e.Nat}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,Expired:e.Record({ledger_time:a}),InsufficientFunds:e.Record({balance:e.Nat})}),ae=e.Variant({Ok:s,Err:ce}),ne=e.Record({to:t,fee:e.Opt(n),spender_subaccount:e.Opt(d),from:t,memo:e.Opt(e.Vec(e.Nat8)),created_at_time:e.Opt(a),amount:n}),oe=e.Variant({GenericError:e.Record({message:e.Text,error_code:e.Nat}),TemporarilyUnavailable:e.Null,InsufficientAllowance:e.Record({allowance:n}),BadBurn:e.Record({min_burn_amount:n}),Duplicate:e.Record({duplicate_of:s}),BadFee:e.Record({expected_fee:n}),CreatedInFuture:e.Record({ledger_time:a}),TooOld:e.Null,InsufficientFunds:e.Record({balance:n})}),se=e.Variant({Ok:s,Err:oe}),ie=e.Record({from:e.Opt(e.Principal)}),le=e.Vec(e.Record({end:e.Nat,canister_id:e.Principal,start:e.Nat}));c.fill(e.Variant({Int:e.Int,Map:e.Vec(e.Tuple(e.Text,c)),Nat:e.Nat,Blob:e.Vec(e.Nat8),Text:e.Text,Array:e.Vec(c)})),r.fill(e.Record({log_length:e.Nat,blocks:e.Vec(e.Record({id:e.Nat,block:c})),archived_blocks:e.Vec(e.Record({args:e.Vec(_),callback:e.Func([e.Vec(_)],[r],["query"])}))}));let _e=e.Record({certificate:e.Vec(e.Nat8),hash_tree:e.Vec(e.Nat8)});return e.Service({archives:e.Func([],[e.Vec(b)],["query"]),get_blocks:e.Func([_],[v],["query"]),get_data_certificate:e.Func([],[P],["query"]),get_transactions:e.Func([x],[q],["query"]),icrc103_get_allowances:e.Func([U],[Q],["query"]),icrc106_get_index_principal:e.Func([],[$],["query"]),icrc10_supported_standards:e.Func([],[e.Vec(e.Record({url:e.Text,name:e.Text}))],["query"]),icrc1_balance_of:e.Func([t],[n],["query"]),icrc1_decimals:e.Func([],[e.Nat8],["query"]),icrc1_fee:e.Func([],[n],["query"]),icrc1_metadata:e.Func([],[e.Vec(e.Tuple(e.Text,p))],["query"]),icrc1_minting_account:e.Func([],[e.Opt(t)],["query"]),icrc1_name:e.Func([],[e.Text],["query"]),icrc1_supported_standards:e.Func([],[e.Vec(j)],["query"]),icrc1_symbol:e.Func([],[e.Text],["query"]),icrc1_total_supply:e.Func([],[n],["query"]),icrc1_transfer:e.Func([H],[W],[]),icrc21_canister_call_consent_message:e.Func([Y],[L],[]),icrc2_allowance:e.Func([ee],[te],["query"]),icrc2_approve:e.Func([re],[ae],[]),icrc2_transfer_from:e.Func([ne],[se],[]),icrc3_get_archives:e.Func([ie],[le],["query"]),icrc3_get_blocks:e.Func([e.Vec(_)],[r],["query"]),icrc3_get_tip_certificate:e.Func([],[e.Opt(_e)],["query"]),icrc3_supported_block_types:e.Func([],[e.Vec(e.Record({url:e.Text,block_type:e.Text}))],["query"]),is_ledger_ready:e.Func([],[e.Bool],["query"])})};import{isNullish as he,toNullable as i}from"@dfinity/utils";var Ne=({from_subaccount:e,fee:r,created_at_time:c,memo:o,...l})=>({...l,fee:i(r),memo:i(o),from_subaccount:i(e),created_at_time:i(c)}),Oe=({spender_subaccount:e,fee:r,created_at_time:c,memo:o,...l})=>({...l,fee:i(r),memo:i(o),spender_subaccount:i(e),created_at_time:i(c)}),xe=({fee:e,created_at_time:r,memo:c,from_subaccount:o,expected_allowance:l,expires_at:p,...d})=>({...d,fee:i(e),memo:i(c),from_subaccount:i(o),created_at_time:i(r),expected_allowance:i(l),expires_at:i(p)}),Re=({userPreferences:{metadata:{utcOffsetMinutes:e,language:r},deriveSpec:c},...o})=>({...o,user_preferences:{metadata:{language:r,utc_offset_minutes:i(e)},device_spec:he(c)?i():i("GenericDisplay"in c?{GenericDisplay:null}:{LineDisplay:{characters_per_line:c.LineDisplay.charactersPerLine,lines_per_page:c.LineDisplay.linesPerPage}})}});var g=class extends Error{errorType;constructor({msg:r,errorType:c}){super(r),this.errorType=c}},pe=class extends Error{constructor(c,o){super();this.message=c;this.error_code=o}},f=class extends Error{},de=class extends f{},me=class extends f{},ue=class extends f{},Te=e=>"GenericError"in e?new pe(e.GenericError.description,e.GenericError.error_code):"InsufficientPayment"in e?new de(e.InsufficientPayment.description):"UnsupportedCanisterCall"in e?new me(e.UnsupportedCanisterCall.description):"ConsentMessageUnavailable"in e?new ue(e.ConsentMessageUnavailable.description):new f(`Unknown error type ${JSON.stringify(e)}`);var Ve=class e extends be{static create(r){let{service:c,certifiedService:o,canisterId:l}=Fe({options:r,idlFactory:fe,certifiedIdlFactory:ge});return new e(l,c,o)}metadata=r=>this.caller(r).icrc1_metadata();transactionFee=r=>this.caller(r).icrc1_fee();balance=r=>this.caller({certified:r.certified}).icrc1_balance_of({owner:r.owner,subaccount:ke(r.subaccount)});transfer=async r=>{let c=await this.caller({certified:!0}).icrc1_transfer(Ne(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to transfer"});return c.Ok};totalTokensSupply=r=>this.caller(r).icrc1_total_supply();transferFrom=async r=>{let c=await this.caller({certified:!0}).icrc2_transfer_from(Oe(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to transfer from"});return c.Ok};approve=async r=>{let c=await this.caller({certified:!0}).icrc2_approve(xe(r));if("Err"in c)throw new g({errorType:c.Err,msg:"Failed to entitle the spender to transfer the amount"});return c.Ok};allowance=r=>{let{certified:c,...o}=r;return this.caller({certified:c}).icrc2_allowance({...o})};consentMessage=async r=>{let{icrc21_canister_call_consent_message:c}=this.caller({certified:!0}),o=await c(Re(r));if("Err"in o)throw Te(o.Err);return o.Ok};getBlocks=r=>this.caller({certified:r.certified}).icrc3_get_blocks(r.args)};export{Ne as a,Oe as b,xe as c,Re as d,g as e,pe as f,f as g,de as h,me as i,ue as j,Te as k,Ve as l};
//# sourceMappingURL=chunk-NLNIA7XQ.js.map
