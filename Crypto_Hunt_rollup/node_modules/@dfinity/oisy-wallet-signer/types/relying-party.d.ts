import * as z from 'zod/v4';
declare const RelyingPartyMessageEventDataSchema: z.ZodOptional<z.ZodUnion<readonly [z.ZodArray<z.ZodObject<{
    name: z.ZodEnum<{
        "ICRC-21": "ICRC-21";
        "ICRC-25": "ICRC-25";
        "ICRC-27": "ICRC-27";
        "ICRC-29": "ICRC-29";
        "ICRC-49": "ICRC-49";
    }>;
    url: z.ZodURL;
}, z.core.$strict>>, z.ZodObject<{
    scopes: z.ZodArray<z.ZodObject<{
        scope: z.ZodObject<{
            method: z.ZodEnum<{
                icrc27_accounts: "icrc27_accounts";
                icrc49_call_canister: "icrc49_call_canister";
            }>;
        }, z.core.$strip>;
        state: z.ZodEnum<{
            denied: "denied";
            granted: "granted";
            ask_on_use: "ask_on_use";
        }>;
    }, z.core.$strict>>;
}, z.core.$strict>]>>;
export type RelyingPartyMessageEventData = z.infer<typeof RelyingPartyMessageEventDataSchema>;
export type RelyingPartyMessageEvent = MessageEvent<RelyingPartyMessageEventData | never>;
export {};
