import type { Identity } from '@dfinity/agent';
import * as z from 'zod/v4';
declare const IdentityNotAnonymousSchema: z.ZodCustom<Identity, Identity>;
export type IdentityNotAnonymous = z.infer<typeof IdentityNotAnonymousSchema>;
export declare const SignerHostSchema: z.ZodOptional<z.ZodURL>;
export type SignerHost = z.infer<typeof SignerHostSchema>;
export declare const SignerOptionsSchema: z.ZodObject<{
    owner: z.ZodCustom<Identity, Identity>;
    host: z.ZodOptional<z.ZodURL>;
    sessionOptions: z.ZodOptional<z.ZodObject<{
        sessionPermissionExpirationInMilliseconds: z.ZodOptional<z.ZodNumber>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export type SignerOptions = z.infer<typeof SignerOptionsSchema>;
export {};
