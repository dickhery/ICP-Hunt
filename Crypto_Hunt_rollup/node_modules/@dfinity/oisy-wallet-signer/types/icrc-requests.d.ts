import * as z from 'zod/v4';
declare const IcrcRequestedScopesSchema: z.ZodObject<{
    scopes: z.ZodArray<z.ZodObject<{
        method: z.ZodEnum<{
            icrc27_accounts: "icrc27_accounts";
            icrc49_call_canister: "icrc49_call_canister";
        }>;
    }, z.core.$strip>>;
}, z.core.$strip>;
export type IcrcRequestedScopes = z.infer<typeof IcrcRequestedScopesSchema>;
declare const IcrcAnyRequestedScopesSchema: z.ZodObject<{
    scopes: z.ZodArray<z.ZodObject<{
        method: z.ZodString;
    }, z.core.$strip>>;
}, z.core.$strip>;
export type IcrcAnyRequestedScopes = z.infer<typeof IcrcAnyRequestedScopesSchema>;
export declare const IcrcRequestAnyPermissionsRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc25_request_permissions">;
    params: z.ZodObject<{
        scopes: z.ZodArray<z.ZodObject<{
            method: z.ZodString;
        }, z.core.$strip>>;
    }, z.core.$strip>;
}, z.core.$strip>;
export type IcrcRequestAnyPermissionsRequest = z.infer<typeof IcrcRequestAnyPermissionsRequestSchema>;
export declare const IcrcPermissionsRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc25_permissions">;
}, z.core.$strict>;
export type IcrcPermissionsRequest = z.infer<typeof IcrcPermissionsRequestSchema>;
export declare const IcrcSupportedStandardsRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc25_supported_standards">;
}, z.core.$strict>;
export type IcrcSupportedStandardsRequest = z.infer<typeof IcrcSupportedStandardsRequestSchema>;
export declare const IcrcStatusRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc29_status">;
}, z.core.$strict>;
export type IcrcStatusRequest = z.infer<typeof IcrcStatusRequestSchema>;
export declare const IcrcAccountsRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc27_accounts">;
}, z.core.$strict>;
export type IcrcAccountsRequest = z.infer<typeof IcrcAccountsRequestSchema>;
declare const MethodSchema: z.ZodString;
export type Method = z.infer<typeof MethodSchema>;
export declare const IcrcCallCanisterRequestParamsSchema: z.ZodObject<{
    canisterId: z.ZodString;
    sender: z.ZodString;
    method: z.ZodString;
    arg: z.ZodString;
    nonce: z.ZodOptional<z.ZodString>;
}, z.core.$strip>;
export type IcrcCallCanisterRequestParams = z.infer<typeof IcrcCallCanisterRequestParamsSchema>;
export declare const IcrcCallCanisterRequestSchema: z.ZodObject<{
    jsonrpc: z.ZodLiteral<"2.0">;
    id: z.ZodUnion<readonly [z.ZodString, z.ZodNumber, z.ZodNull]>;
    method: z.ZodLiteral<"icrc49_call_canister">;
    params: z.ZodObject<{
        canisterId: z.ZodString;
        sender: z.ZodString;
        method: z.ZodString;
        arg: z.ZodString;
        nonce: z.ZodOptional<z.ZodString>;
    }, z.core.$strip>;
}, z.core.$strip>;
export type IcrcCallCanisterRequest = z.infer<typeof IcrcCallCanisterRequestSchema>;
export {};
