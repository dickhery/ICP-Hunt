import * as z from 'zod/v4';
export declare const SessionTimestampsSchema: z.ZodObject<{
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, z.core.$strip>;
export declare const SessionIcrcScopeSchema: z.ZodObject<{
    scope: z.ZodObject<{
        method: z.ZodEnum<{
            icrc27_accounts: "icrc27_accounts";
            icrc49_call_canister: "icrc49_call_canister";
        }>;
    }, z.core.$strip>;
    state: z.ZodEnum<{
        denied: "denied";
        granted: "granted";
        ask_on_use: "ask_on_use";
    }>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, z.core.$strip>;
export type SessionIcrcScope = z.infer<typeof SessionIcrcScopeSchema>;
export declare const SessionPermissionsSchema: z.ZodObject<{
    scopes: z.ZodArray<z.ZodObject<{
        scope: z.ZodObject<{
            method: z.ZodEnum<{
                icrc27_accounts: "icrc27_accounts";
                icrc49_call_canister: "icrc49_call_canister";
            }>;
        }, z.core.$strip>;
        state: z.ZodEnum<{
            denied: "denied";
            granted: "granted";
            ask_on_use: "ask_on_use";
        }>;
        createdAt: z.ZodNumber;
        updatedAt: z.ZodNumber;
    }, z.core.$strip>>;
    createdAt: z.ZodNumber;
    updatedAt: z.ZodNumber;
}, z.core.$strip>;
export type SessionPermissions = z.infer<typeof SessionPermissionsSchema>;
