import type { Principal } from '@dfinity/principal';
import type { IcrcScopesArray } from '../types/icrc-responses';
import type { IcrcPermissionState, IcrcScopedMethod } from '../types/icrc-standards';
import type { Origin } from '../types/post-message';
import type { SignerOptions } from '../types/signer-options';
interface SessionIdentifier {
    owner: Principal;
    origin: Origin;
}
export declare const saveSessionScopes: ({ scopes, ...rest }: SessionIdentifier & {
    scopes: IcrcScopesArray;
}) => void;
export declare const readSessionValidScopes: ({ sessionOptions, ...params }: SessionIdentifier & Pick<SignerOptions, "sessionOptions">) => IcrcScopesArray | undefined;
export declare const sessionScopeState: ({ method, ...rest }: SessionIdentifier & {
    method: IcrcScopedMethod;
}) => IcrcPermissionState;
export {};
